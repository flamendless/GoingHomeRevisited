local CustomList = {}
CustomList.__mt = {
	__index = CustomList
}

function CustomList.new()
	return setmetatable({
		size = 0,
	}, CustomList.__mt)
end

function CustomList:add(e)
	@@assert(e.__isEntity)
	local index = self.size + 1
	self[index] = e
	self[e] = index
	self.size = index

	if self.onAdded then
		self:onAdded(e)
	end
	return self
end

function CustomList:remove(e)
	@@assert(e.__isEntity)
	if not self[e] then return end

	for i = self.size, 1, -1 do
		local e2 = self[i]
		if e == e2 then
			table.remove(self, i)
			self[e] = nil
			self.size = self.size - 1
		end
	end

	if self.onRemoved then
		self:onRemoved(e)
	end
	return self
end

function CustomList:has(e)
	@@assert(e.__isEntity)
	return self[e] and true or false
end

function CustomList:sort(fn)
	@@assert(type(fn) == "function")
	table.sort(self, fn)
	return self
end

return setmetatable(CustomList, {
	__call = function()
		return CustomList.new()
	end,
})
