local Concord = require("modules.concord.concord")

Concord.component($_C_LIGHT_DISABLED)

Concord.component($_C_LIGHT_ID, function(c, n)
	@@assert(type(n) == "number")
	c.value = n
end)

Concord.component($_C_LIGHT_GROUP, function(c, id)
	@@assert(type(id) == "string")
	c.value = id
end)

Concord.component($_C_LIGHT_SWITCH_ID, function(c, id)
	@@assert(type(id) == "string")
	c.value = id
end)

Concord.component($_C_POINT_LIGHT, function(c, size)
	@@assert(type(size) == "number")
	c.value = size
	c.orig_value = size
end)

Concord.component($_C_LIGHT_DIR, function(c, t)
	@@assert(type(t) == "table")
	c.value = t
	c.orig_value = tablex.copy(t)
end)

Concord.component($_C_DIFFUSE, function(c, t)
	@@assert(type(t) == "table")
	c.value = t
	c.orig_value = tablex.copy(t)
end)

Concord.component($_C_LIGHT_FADING, function(c, amount, dir)
	@@assert(type(amount) == "number")
	@@assert(type(dir) == "number" and (dir == -1 or dir == 1))
	c.amount = amount
	c.dir = dir
end)

Concord.component($_C_DLIGHT_FLICKER_REMOVE_AFTER)
Concord.component($_C_DLIGHT_FLICKER_SURE_ON_AFTER)
Concord.component($_C_DLIGHT_FLICKER, function(c, during, on_chance, off_chance)
	@@assert(type(during) == "number")
	@@assert(type(on_chance) == "number" and on_chance >= 0 and on_chance <= 1)
	@@assert(type(off_chance) == "number" and off_chance >= 0 and off_chance <= 1)
	c.during = during
	c.on_chance = on_chance
	c.off_chance = off_chance
end)

Concord.component($_C_DLIGHT_FLICKER_REPEAT, function(c, count, delay)
	@@sassert(count, type(count) == "number")
	@@sassert(delay, type(delay) == "number")
	c.count = count or 0
	c.delay = delay or 0
	c.inf = c.count == -1
end)
