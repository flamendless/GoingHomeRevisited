local Log = require("modules.log.log")

local insert = table.insert

local Items = {}

local list = require("data.items")
local acquired = {}

local function get_item(id)
	@@assert(type(id) == "string")
	@@assert(list[id], "no " .. id .. " in data.items")
	for _, item in ipairs(acquired) do
		if item.id == id then
			return item
		end
	end
	return nil
end

function Items.add(id)
	@@assert(type(id) == "string")
	@@assert(list[id], "no " .. id .. " in data.items")
	@@assert(Items.has(id) == false, id .. " was already added")
	insert(acquired, { id = id, equipped = false })
	Log.info("item: " .. id .. " was added")
end

function Items.get_info(id)
	@@assert(type(id) == "string")
	@@assert(list[id])
	return list[id]
end

function Items.get_acquired()
	return acquired
end

function Items.has(id)
	@@assert(type(id) == "string")
	@@assert(list[id], "no " .. id .. " in data.items")
	local has = get_item(id)
	return has ~= nil
end

function Items.toggle_equip(id)
	@@assert(type(id) == "string")
	@@assert(list[id], "no " .. id .. " in data.items")
	local item = get_item(id)
	item.equipped = not item.equipped
end

function Items.is_equipped(id)
	@@assert(type(id) == "string")
	@@assert(list[id], "no " .. id .. " in data.items")
	local item = get_item(id)
	return item.equipped
end

return Items
