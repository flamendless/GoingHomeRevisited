local Fog = class()

local Image = require("image")
!if _DEV then
local DevTools
!end

function Fog:new(canvas, config)
	@@assert(canvas:type() == "CustomCanvas")
	@@assert(type(config) == "table")
	@@assert(type(config.w) == "number")
	@@assert(type(config.h) == "number")
	@@assert(type(config.scale) == "number")

	!if _DEV then
	DevTools = require("devtools")
	!end
	local shader_code = love.graphics.newShader("shaders/fog.glsl")
	local noise = Image.generate_noise(config.w/config.scale, config.h/config.scale)
	local texture = love.graphics.newImage(noise)
	texture:setFilter("nearest", "nearest")
	texture:setWrap("repeat", "clampzero")
	shader_code:send("tex_noise", texture)

	return self:init({
		shader_code = shader_code,
		flag_process = false,
		canvas = canvas,
		texture = texture,
		scale = config.scale,
	})
end

function Fog:apply()
	!if _DEV then
	if DevTools.flags.fog then
		love.graphics.setShader(self.shader_code)
	end
	!else
	if not self.flag_process then return end
	love.graphics.setShader(self.shader_code)
	!end
end

return Fog
