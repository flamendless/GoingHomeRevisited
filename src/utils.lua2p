local Bitser = require("modules.bitser.bitser")
local JSON = require("modules.json.json")
local Log = require("modules.log.log")

local find = string.find
local format = string.format
local sub = string.sub

local Utils = {}

function Utils.read_file(filename)
	local file = love.filesystem.getInfo(filename)
	Log.info(format("'%s' exists: %s", filename, file ~= nil))

	if file then
		local content = love.filesystem.read(filename)
		return content, true
	end

	return false
end

function Utils.write_to_file(filename, data)
	love.filesystem.write(filename, data)
	Log.info(format("'%s' written", filename))
end

function Utils.write_to_file_json(filename, data)
	local to_write = JSON.encode(data)
	Utils.write_to_file(filename, to_write)
end

function Utils.serialize_to_file(filename, data)
	local to_write = Bitser.dumps(data)
	Utils.write_to_file(filename, to_write)
	return to_write
end

function Utils.deserialize_from_file(filename)
	local content, exists = Utils.read_file(filename)
	local data = Bitser.loads(content)
	return data, exists
end

function Utils.deserialize(content)
	return Bitser.loads(content)
end

function Utils.parse_json(filename)
	local content, exists = Utils.read_file(filename)

	if exists then
		local parsed = JSON.decode(content)
		return parsed, true
	end

	return false
end

function Utils.compare_hash_key(a, key)
	local a = love.data.hash("sha256", a)
	return a == key
end

function Utils.hash_and_compare(a, b)
	local hashed_a = love.data.hash("md5", a)
	local hashed_b = love.data.hash("md5", b)

	return hashed_a == hashed_b
end

function Utils.get_substring(str, sep)
	local n = find(str, sep)
	local s = sub(str, 1, n - 1)
	return s
end

return Utils
