local Concord = require("modules.concord.concord")
local Enum = require("modules.enum.enum")
local LoveSplash = require("modules.splashes.o-ten-one")
local Timer = require("modules.hump.timer")
local TLE = require("modules.tle.timeline")

local ECS = require("ecs")
local Resources = require("resources")
local Inputs = require("inputs")
local Fade = require("fade")
local Palette = require("palette")
local Preloader = require("preloader")
local Save = require("save")

local StateSplash = class()
StateSplash.id = "Splash"

local Assemblages = {
	Common = require("assemblages.common")
}

local resources = {images = {}, fonts = {}}
local res_images, res_fonts

local states = Enum("splash_love", "splash_wits", "splash_flam")
local current_state

local splash_love
local delay_skip = 0.5

local timer_skip
local skipabble = false

local color_a = {0.898, 0.48627451, 0.074509804, 1}
local color_b = {0.952941176, 0.952941176, 0.054901961, 1}

function StateSplash:new()
	return self:init({
		is_ready = false,
		world = Concord.world(),
		entities = {},
		gamestate = nil,
		timeline = nil,
	})
end

function StateSplash:load()
	Preloader.start(Resources.get(self.id), resources,
		function()
			res_images = resources.images
			res_fonts = resources.fonts
			self.is_ready = true
			self:start()
		end)
end

function StateSplash:start()
	ECS.load_systems(self.id, self.world)
	self.world:emit("start_state")
end

function StateSplash:update(dt)
	if not self.is_ready then return end
	if timer_skip then
		timer_skip:update(dt)
	end

	if current_state == states.splash_love then
		splash_love:update(dt)
	else
		self.world:emit("update", dt)
	end

	if Save.data.splash_done then
		if Inputs.released("skip") then
			if current_state == states.splash_love and skipabble then
				splash_love:skip()
				skipabble = false
			end

			if current_state == states.splash_wits and skipabble then
				self.entities.splash_wits:give("animation_stop", "pauseAtEnd")
				skipabble = false
			end

			if current_state == states.splash_flam and skipabble then
				self.world:emit("switch_state", "Menu")
				skipabble = false
			end
		end
	end
end

function StateSplash:draw()
	if not self.is_ready then return end

	if current_state == states.splash_love then
		splash_love:draw()
	else
		self.world:emit("draw")

		if current_state == states.splash_flam then
			self.world:emit("effect_draw")
		end
	end

	self.world:emit("draw_ui")
	Fade.draw()
end

function StateSplash:exit()
	Resources.clean(resources)
	Timer.clear()

	self.world:emit("cleanup")
	self.world:clear()

	for i, e in ipairs(self.world:getEntities()) do
		e:destroy()
	end

	for k, e in pairs(self.entities) do
		self.entities[k]:destroy()
		self.entities[k] = nil
	end

	current_state = states.splash_love
	splash_love = nil
	timer_skip = nil
	skipabble = false
	color_a = {0.898, 0.48627451, 0.074509804, 1}
	color_b = {0.952941176, 0.952941176, 0.054901961, 1}
end

return StateSplash
