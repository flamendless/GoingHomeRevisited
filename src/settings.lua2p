local JSON = require("modules.json.json")
local Log = require("modules.log.log")

local Utils = require("utils")

local insert = table.insert
local format = string.format
local sub = string.sub

local Settings = {
	current = {
		window_mode = 1,
		game_sounds = true,
		game_music = true,
		graphics_quality = "high",
	}
}

local filename = !(_SETTINGS_FILENAME)
local graphics_quality = {"low", "high"}

function Settings.initialize()
	local content, exists = Utils.read_file(filename)

	if exists then
		Settings.current = JSON.decode(content)
	else
		Settings.create_new()
	end
end

function Settings.create_new()
	local ren_name, ren_version, ren_vendor, ren_device = love.graphics.getRendererInfo()
	local gl_version = sub(ren_version, 1, 3)

	if gl_version == !(_MIN_GL_VERSION) then
		Settings.current.graphics_quality = "low"
	else
		Settings.current.graphics_quality = "high"
	end

	Settings.current.window_mode = 1
	Settings.current.game_sounds = true
	Settings.current.game_music = true
	Settings.overwrite()
end

function Settings.overwrite()
	Utils.write_to_file_json(filename, Settings.current)
end

function Settings.set(id, value, should_overwrite)
	local current = Settings.current

	!if _ASSERT then
	Assert.should_string(id)
	Assert.either_type(value, Assert.types.T_NUMBER, Assert.types.T_BOOLEAN)
	Assert.should_exists(current[id])
	Assert.safe_should_boolean(should_overwrite)
	!end

	local prev = current[id]

	if not (prev == value) then
		current[id] = value
		Log.info(format("set %s to %s", id, value))

		if should_overwrite then
			Settings.overwrite()
		end
	end
end

function Settings.set_from_table(t, should_overwrite)
	!if _ASSERT then
	Assert.should_table(t)
	Assert.safe_should_boolean(should_overwrite)
	!end

	local current = Settings.current

	for k, v in pairs(t) do
		!if _ASSERT then
		Assert.should_exists(current[k])
		!end

		current[k] = v
		Log.info(format("set %s to %s", k, v))
	end

	if should_overwrite then
		Settings.overwrite()
	end
end

function Settings.get_gq_list() return graphics_quality end

return Settings
