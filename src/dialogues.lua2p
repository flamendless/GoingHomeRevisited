local Dialogues = {}

local dialogues = {}
dialogues.common = {
	item_without = {
		"there is nothing to use this item with",
	},
}

dialogues.outside = {
	car = {
		"An old but reliable car",
		choices = {
			{"drive",
				"Maybe tomorrow",
				"For now I need to get in shelter and rest",
			},
			{"search",
				"There might be something in the glove box",
				"_get_flashlight",
				get_flashlight = {
					"A very handy flashlight",
					"Let's hope the power is not out",
					"Or else it will be a fumbling in the dark again",
				},
				has_flashlight_already = {
					"There is nothing useful here anymore",
				},
			},
			{"do nothing",},
		},
	},

	frontdoor_locked = {
		"This door leads to the house",
		choices = {
			{"open",
				"_check_frontdoor",
				door_locked = {
					"the door is locked",
					"I do not have the key",
					"I must have left it in work",
				},
				door_unlocked = {
					"the door is unlocked",
					--TODO remove dialogue component
				}
			},
			{"do nothing"},
		},
	},

	backdoor = {
		"_check_has_flashlight",
		no_flashlight_yet = {
			"I need to get my things first from the car",
			"_make_car_interactive",
		},
	},
}

dialogues.utility_room = {
	washing_machine = {
		"a washing machine",
		"it's too late to do the laundry",
	},
	basket = {
		"a basket for used clothes",
		"but there's also trash",
	},
	electrical_box = {
		"a basket for used clothes",
	},
	shelf = {
		"shelf for various items",
		"I seriously need to get this organized",
	},
	ironing_board = {
		"an ironing board I rarely use",
	},
}

function Dialogues.get(main, sub)
	@@assert(type(main) == "string")
	@@assert(type(sub) == "string")
	@@assert(dialogues[main], "there is no " .. main .. " in dialogue table")
	@@assert(dialogues[main][sub], "there is no " .. sub .. " in dialogue table")
	return dialogues[main][sub]
end

return Dialogues
