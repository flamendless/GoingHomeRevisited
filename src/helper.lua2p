local Helper = {}

function Helper.check_point_rect(px, py, x, y, w, h)
	return px > x and px < x + w and py > y and py < y + h
end

function Helper.get_real_size(e)
	@@assert(e.__isEntity)
	local box = e.bounding_box
	local bw, bh = box.w, box.h
	local t = e.transform
	if t then
		bw = bw * t.sx
		bh = bh * t.sy
	end
	return bw, bh
end

function Helper.get_offset(e)
	@@assert(e.__isEntity)
	local transform = e.transform
	local anim_data = e.animation_data
	local sprite = e.sprite
	local ox = transform.ox
	local oy = transform.oy

	if anim_data then
		if transform.ox == 0.5 then
			ox = anim_data.frame_width * 0.5
		elseif transform.ox == 1 then
			ox = anim_data.frame_width
		end

		if transform.oy == 0.5 then
			oy = anim_data.frame_height * 0.5
		elseif transform.oy == 1 then
			oy = anim_data.frame_height
		end
	elseif sprite then
		local spr = sprite.image

		if transform.ox == 0.5 then
			ox = spr:getWidth() * 0.5
		elseif transform.ox == 1 then
			ox = spr:getWidth()
		end

		if transform.oy == 0.5 then
			oy = spr:getHeight() * 0.5
		elseif transform.oy == 1 then
			oy = spr:getHeight()
		end
	end

	return ox, oy
end

function Helper.get_real_pos_box(e)
	@@assert(e.__isEntity)
	local box = e.bounding_box
	local pos = e.pos
	local transform = e.transform
	local camera = e.camera

	local x = pos.x
	local y = pos.y

	if camera then
		x = box.screen_pos.x
		y = box.screen_pos.y
	end

	if transform then
		local ox, oy = Helper.get_offset(e)
		x = x - ox * transform.orig_sx
		y = y - oy * transform.orig_sy
	end

	return x, y
end

return Helper
