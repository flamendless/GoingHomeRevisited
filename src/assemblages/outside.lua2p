local Palette = require("palette")

local random = love.math.random

local Outside = {}

local z_index = {
	bg_house = 0,
	firefly = 1,
	--player = 2,
	splashes = 3,
}

function Outside.bg_house(e, sprite, x, y, quad)
	e:give("id", "bg_house")
	:give("sprite", sprite)
	:give("pos", x, y)
	:give("quad", quad)
	:give("z_index", z_index.bg_house, false)
end

function Outside.splashes(e, spritesheet, x, y, is_compatible)
	e:give("id", "splashes")
	:give("pos", x, y)
	:give("z_index", z_index.splashes)
	:give("color", {1, 1, 1, 1})
	:give("animation")
	:give("animation_data", {
			spritesheet = spritesheet,
			frames = {"1-2", 1, "1-2", 2, "1-2", 3, "1-2", 4},
			delay = 0.2,
			rows_count = 4,
			columns_count = 2,
			n_frames = 8,
			start_frame = random(1, 8),
		})

	if not is_compatible then
		e:give("transform", 0, 2, 2)
	end
end

function Outside.firefly(e, sprite, x, y, points)
	e:give("id", "firefly")
	:give("sprite", sprite)
	:give("pos", x, y)
	:give("path", points)
	:give("transform", 0, 1, 1, 0.5, 0.5)
	:give("z_index", z_index.firefly)
	:give("firefly", {Palette.colors.firefly_start, Palette.colors.firefly_end})
	:give("color", Palette.get("firefly_start", 0))
	:give("hidden")
end

function Outside.firefly_light(e, sprite, e_firefly)
	e:give("id", "firefly_light")
	:give("firefly_light")
	:give("pos", 0, 0)
	:give("transform", 0, 1, 1)
	:give("color", Palette.colors.firefly_light)
	:give("light", "round", 1)
	:give("sprite", sprite, "round")
	:give("light_flicker", 0.05)
	:give("attach_to", e_firefly)
	:give("z_index", z_index.firefly + 1)
	:give("hidden")
end

function Outside.house_light(e, sprite)
	e:give("id", "house_light")
	:give("pos", 419, 213)
	:give("transform", 0, 1.25, 1.25)
	:give("color", Palette.colors.house_light)
	:give("light", "custom", 0.8)
	:give("sprite", sprite)
	:give("light_flicker", 0.025)
end

function Outside.col_ground(e, w, h)
	local ground_h = 49
	e:give("id", "col_ground")
	:give("pos", 0, h - ground_h)
	:give("bump")
	:give("collider", w, ground_h)
end

return Outside
