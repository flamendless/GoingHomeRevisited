local MapData = {}

MapData.rooms = {
	Outside = {
		interactive_door = "StorageRoom"
	}
}

!(
local get_size = function(t)
	local tw, th = t.tilewidth, t.tileheight
	local w, h = t.width, t.height

	return {w * tw, h * th}
end

local map_test = require("res/tilemaps/test/test_map")
local _sizes = {
	Test = get_size(map_test),
}
)
!!local map_sizes = _sizes

local map_paths = {
	Test = "res/tilemaps/test/test_map.lua",
}

function MapData.get_size(id)
	local size = map_sizes[id]

	!if _ASSERT then
	Assert.must(id, Types.T_STRING)
	Assert.exists(size)
	!end

	return size
end

function MapData.get_path(id)
	local path = map_paths[id]

	!if _ASSERT then
	Assert.must(id, Types.T_STRING)
	Assert.exists(path)
	!end

	return path
end

function MapData.get_next(current_id, next_id)
	local rooms = MapData.rooms[current_id]
	local next_room = rooms[next_id]

	!if _ASSERT then
	Assert.exists(rooms)
	Assert.exists(next_room)
	!end

	return next_room
end

return MapData
