local MotionBlur = class()
MotionBlur.type = "MotionBlur"

function MotionBlur:new(canvas, config)
	@@assert(canvas:type() == "CustomCanvas")
	@@sassert(config, type(config) == "table")
	self.shader_code = love.graphics.newShader("shaders/motion_blur.glsl")
	self.shader_code:send("strength", 0.1)
	self.flag_process = false
	self.canvas = canvas
	self.previous = {}
end

function MotionBlur:store_previous(x, y, angle)
	self.previous.target = vec2(x, y)
	self.previous.angle = angle
end

function MotionBlur:set_angle(angle)
	@@assert(type(angle) == "number")
	self.shader_code:send("angle", angle)
end

function MotionBlur:set_strength(strength)
	@@assert(type(strength) == "number")
	self.shader_code:send("strength", strength)
end

function MotionBlur:post_process_draw()
	if not self.flag_process then return end
	love.graphics.setShader(self.shader_code)
	self.canvas:render()
	love.graphics.setShader()
end

return MotionBlur
