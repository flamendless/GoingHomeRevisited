local Concord = require("modules.concord.concord")
local Enum = require("modules.enum.enum")

local types = Enum("pie", "open", "closed")

local pi = math.pi
local half_pi = pi/2
local two_pi = pi * 2

Concord.component("arc", function(c, radius, segments, start_angle, end_angle)
	!if _ASSERT then
	Assert.should_number(radius)
	Assert.safe_should_number(segments)
	Assert.safe_should_number(start_angle)
	Assert.safe_should_number(end_angle)
	!end

	c.radius = radius
	c.segments = segments or radius
	c.start_angle = start_angle or -half_pi
	c.end_angle = end_angle or two_pi
end)

Concord.component("arc_type", function(c, arc_type)
	!if _ASSERT then
	Assert.safe_should_string(arc_type)
	!end

	c.arc_type = types[arc_type]
end)
