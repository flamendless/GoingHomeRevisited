local Concord = require("modules.concord.concord")

Concord.component("cell_bg")
Concord.component("cell_line")
Concord.component("cell_fill")
Concord.component("hovered_cell")
Concord.component("hovered_item")
Concord.component("usable_with_item")
Concord.component("item_preview")

--TODO add serialize/deserialize
local c_item_choice = Concord.component("item_choice", function(c, e)
	@@assert(e.__isEntity and e.item)
	e:ensure("key")
	c.entity = e
end)

Concord.component("item_choices", function(c, ...)
	local t = {...}
	@@assert(type(t) == "table" and #t ~= 0)
	c.value = t
end)

Concord.component("item", function(c, id, name, desc)
	@@assert(type(id) == "string")
	@@assert(type(name) == "string")
	@@assert(type(desc) == "string")
	c.id = id
	c.name = name
	c.desc = desc
end)

local c_cell_item = Concord.component("cell_item", function(c, e)
	@@assert(e.__isEntity and e.item)
	e:ensure("key")
	c.item_e = e
end)

function c_cell_item:serialize()
	return {
		item_e_key = self.item_e.key.value
	}
end

function c_cell_item:deserialize(data)
	local e = self.__entity:getWorld()getEntityByKey(data.item_e_key)
	self:__populate(e)
end
