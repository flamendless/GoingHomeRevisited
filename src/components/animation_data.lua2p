local Concord = require("modules.concord.concord")

local floor = math.floor

Concord.component("animation_data", function(c, data)
	!if _ASSERT then
	assert(type(data) == "table", "Passed argument must be of type 'table'")
	assert(data.spritesheet:type() == "Image", "Passed argument must be of type 'Image'")
	assert(type(data.frames) == "table", "Passed argument must be of type 'table'")
	assert(type(data.delay) == "number", "Passed argument must be of type 'number'")
	assert(type(data.rows_count) == "number", "Passed argument must be of type 'number'")
	assert(type(data.columns_count) == "number", "Passed argument must be of type 'number'")
	if data.durations then
		assert(type(data.durations) == "table", "Passed argument must be of type 'table'")
	end
	!end

	c.spritesheet = data.spritesheet
	c.frames = data.frames
	c.delay = data.delay
	c.rows_count = data.rows_count
	c.columns_count = data.columns_count
	c.durations = data.durations

	c.sheet_width = c.spritesheet:getWidth()
	c.sheet_height = c.spritesheet:getHeight()
	c.frame_width = floor(c.sheet_width/c.columns_count)
	c.frame_height = floor(c.sheet_height/c.rows_count)
end)
