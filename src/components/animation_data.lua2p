local Concord = require("modules.concord.concord")

local floor = math.floor

Concord.component("animation_data", function(c, data)
	!if _ASSERT then
	Assert.must(data, Types.T_TABLE)
	Assert.must(data.spritesheet, Types.T_IMAGE)
	Assert.must(data.frames, Types.T_TABLE)
	Assert.must(data.rows_count, Types.T_NUMBER)
	Assert.must(data.columns_count, Types.T_NUMBER)
	Assert.safe.must(data.n_frames, Types.T_NUMBER)
	Assert.safe.within_range(data.start_frame, 1, data.n_frames)

	if data.delay then
		Assert.either_type(data.delay, Types.T_NUMBER, Types.T_TABLE)
	end

	Assert.should_atleast(data.durations, data.delay)
	Assert.safe.must(data.durations, Types.T_TABLE)
	!end

	c.spritesheet = data.spritesheet
	c.frames = data.frames
	c.delay = data.delay
	c.rows_count = data.rows_count
	c.columns_count = data.columns_count
	c.durations = data.durations
	c.n_frames = data.n_frames
	c.start_frame = data.start_frame

	c.sheet_width = c.spritesheet:getWidth()
	c.sheet_height = c.spritesheet:getHeight()
	c.frame_width = floor(c.sheet_width/c.columns_count)
	c.frame_height = floor(c.sheet_height/c.rows_count)
end)
