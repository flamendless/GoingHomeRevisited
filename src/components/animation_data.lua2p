local Concord = require("modules.concord.concord")

local floor = math.floor

Concord.component("animation_data", function(c, data)
	!if _ASSERT then
	Assert.should_table(data)
	Assert.should_image(data.spritesheet)
	Assert.should_table(data.frames)
	Assert.should_number(data.rows_count)
	Assert.should_number(data.columns_count)
	Assert.safe_should_number(data.n_frames)
	if Assert.safe_should_number(data.start_frame) then
		if data.start_frame > data.n_frames then
			error("start_frame should not exceed n_frames")
		elseif data.start_frame <= 0 then
			error("start_frame should not be less than 0")
		end
	end

	Assert.either_type(data.delay, Assert.types.T_NUMBER, Assert.types.T_TABLE)
	Assert.should_atleast(data.durations, data.delay)
	Assert.safe_should_table(data.durations)
	!end

	c.spritesheet = data.spritesheet
	c.frames = data.frames
	c.delay = data.delay
	c.rows_count = data.rows_count
	c.columns_count = data.columns_count
	c.durations = data.durations
	c.n_frames = data.n_frames
	c.start_frame = data.start_frame

	c.sheet_width = c.spritesheet:getWidth()
	c.sheet_height = c.spritesheet:getHeight()
	c.frame_width = floor(c.sheet_width/c.columns_count)
	c.frame_height = floor(c.sheet_height/c.rows_count)
end)
