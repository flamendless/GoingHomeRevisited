local Concord = require("modules.concord.concord")

local Image = require("image")
local Resources = require("resources")

Concord.component("bg")

local c_sprite = Concord.component("sprite", function(c, resource_id, container)
	@@assert(type(resource_id) == "string")
	@@sassert(container, type(container) == "string")
	c.resource_id = resource_id
	c.container = container or "images"
	c.image = Resources.data[c.container][resource_id]
	c.iw, c.ih = c.image:getDimensions()
end)

function c_sprite:serialize()
	return {
		resource_id = self.resource_id,
		container = self.container,
	}
end

function c_sprite:deserialize(data)
	self:__populate(data.resource_id, data.container)
end

local c_noise_tex = Concord.component("noise_texture", function(c, w, h)
	@@assert(type(w) == "number")
	@@assert(type(h) == "number")
	c.w = w
	c.h = h
	c.texture = love.graphics.newImage(Image.generate_noise(w, h))
	c.texture:setWrap("repeat", "repeat")
	c.texture:setFilter("linear", "linear")
end)

function c_noise_tex:serialize()
	return {
		w = self.w,
		h = self.h,
	}
end

function c_noise_tex:deserialize(data)
	self:__populate(data.w, data.h)
end

--TODO add serialize/deserialize
local c_displacement_tex = Concord.component("displacement_texture", function(c, resource_id)
	@@assert(type(resource_id) == "string")
	c.resource_id = resource_id
	c.texture = Resources.data.images[resource_id]
end)
