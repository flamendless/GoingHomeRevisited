local Concord = require("modules.concord.concord")

-- !(
-- local ids = {
-- 	"typewriter",
-- }
--
-- for _, v in ipairs(ids) do
-- 	local cname = v .. "_on_finish"
-- 	outputLua("Concord.component('" .. cname .. "', function(c, signal, delay, ...)\n")
-- 	-- outputLua("\t@@assert(type(signal) == 'string')\n")
-- 	-- outputLua("\t@@assert(type(delay) == 'number')\n")
-- 	outputLua("\tc.signal = signal\n")
-- 	outputLua("\tc.delay = delay or 0\n")
-- 	outputLua("\tc.args = {...}\n")
-- 	outputLua("end)\n\n")
-- end
-- )

local function ctor(c, signal, delay, ...)
	@@assert(type(signal) == "string")
	@@assert(type(delay) == "number")
	c.signal = signal
	c.delay = delay or 0
	c.args = {...}
end

local function callback(name)
	return Concord.component(name, ctor)
end

local names = {
	"animation_on_finish",
	"typewriter_on_finish",
}

for _, v in ipairs(names) do
	callback(v)
end
