local Concord = require("modules.concord.concord")

!if _DEV then
local Inputs = require("inputs")
!end

Concord.component("key_input")

Concord.component("hold", function(c, max_time)
	@@assert(type(max_time) == "number")
	c.current_time = 0
	c.max_time = max_time
	c.was_held = false
	c.is_held = false
end)

Concord.component("hold_key", function(c, key)
	@@assert(type(key) == "string")
	@@assert(Inputs.rev_map[key])
	c.value = key
end)

local c_tk = Concord.component("target_key", function(c, e)
	@@assert(e.__isEntity)
	@@assert(e.key_input)
	e:ensure("key")
	c.target_key = e
end)

function c_tk:serialize()
	return {
		e_key = self.target_key.key.value
	}
end

function c_tk:deserialize(data)
	self.target_key = self.__entity:getWorld():getEntityByKey(data.e_key)
end
