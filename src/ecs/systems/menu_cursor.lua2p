local Concord = require("modules.concord.concord")
local Flux = require("modules.flux.flux")

local MenuCursor = Concord.system({
	pool = {"option_key", "color", "position"}
})

local offset_x = 64
local dur_in = 0.75
local dur_out = 0.5

local color_to_red = function(color)
	Flux.to(color.color, dur_in, {
		[1] = 1,
		[2] = 0,
		[3] = 0,
		[4] = 1
	})
end

local color_to_white = function(color)
	Flux.to(color.color, dur_out, {
		[1] = color.original_color[1],
		[2] = color.original_color[2],
		[3] = color.original_color[3],
		[4] = color.original_color[4],
	})
end

function MenuCursor:update_cursor(cursor)
	for _, e in ipairs(self.pool) do
		local option_key = e:get("option_key")
		local position = e:get("position")
		local color = e:get("color")

		if cursor == option_key.id then
			color_to_red(color)
			Flux.to(position.pos, dur_in, {
				x = position.original_pos.x - offset_x
			})
		else
			color_to_white(color)
			Flux.to(position.pos, dur_out, {
				x = position.original_pos.x
			})
		end
	end
end

return MenuCursor
