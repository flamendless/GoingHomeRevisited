local Bump = require("modules.bump.bump-niji")

local BumpStorage = {}

local insert = table.insert
local remove = table.remove

local meta = getmetatable(Bump.newWorld())
local BumpStorage = setmetatable({super = meta.__index}, meta)

BumpStorage.__mt = {
	__index = BumpStorage,
}

local ctor = function(def)
	local self = setmetatable(Bump.newWorld(), BumpStorage.__mt)
	return self
end

function BumpStorage:add(entity)
	local x = entity.pos.x + entity.collider.ox
	local y = entity.pos.y + entity.collider.oy
	local w = entity.collider.w
	local h = entity.collider.h
	self.super.add(self, entity, x, y, w, h)
end

function BumpStorage:has(entity)
	return self:hasItem(entity)
end

function BumpStorage:clear()
	for _, e in ipairs(self:getItems()) do
		self:remove(item)
	end
end

return ctor
