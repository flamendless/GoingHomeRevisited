local Concord = require("modules.concord.concord")
local Flux = require("modules.flux.flux")
local Lume = require("modules.lume.lume")
local Timer = require("modules.hump.timer")

local randomf = Lume.random
local weightedchoice = Lume.weightedchoice

local GhostEffect = Concord.system({
	pool_text = {"ghost_effect", "random_text"}
})

function GhostEffect:init()
	self.pool_text.onEntityAdded = function(pool, e)
		local c = e.ghost_effect

		c.timer_ghost = Timer()
		c.timer_effect = Timer()
		c.timer_effect:every(randomf(c.range_every.x, c.range_every.y), function()
			self:toggle_effect(c)
		end)
	end
end

function GhostEffect:toggle_effect(c)
	local r = randomf(c.range_trigger.x, c.range_trigger.y)
	c.timer_ghost:during(r, function()
		local chance = weightedchoice({yes = c.range_chance.x, no = c.range_chance.y})
		if chance == "yes" then
			local width = love.graphics.getWidth()
			local height = love.graphics.getHeight()

			c.effect_color[1] = randomf(c.range_color.x, c.range_color.y)
			c.effect_color[2] = randomf(c.range_color.x, c.range_color.y)
			c.effect_color[3] = randomf(c.range_color.x, c.range_color.y)
			c.effect_color[4] = randomf(c.range_alpha.x, c.range_alpha.y)
			c.is_ghost = true
			c.ghost.sx = love.math.random(c.range_scale.x, c.range_scale.y)
			c.ghost.sy = c.ghost.sx
			c.ghost.x = love.math.random(-width/4, width - 64)
			c.ghost.y = love.math.random(-height/4, height - 64)
		elseif chance == "no" then
			c.is_ghost = false
		end
	end)
end

function GhostEffect:update(dt)
	for _, e in ipairs(self.pool_text) do
		local c = e.ghost_effect

		c.timer_effect:update(dt)
		c.timer_ghost:update(dt)
	end
end

function GhostEffect:effect_draw()
	for _, e in ipairs(self.pool_text) do
		local random_text = e.random_text
		local ghost_effect = e.ghost_effect
		local font = e.font
		local text

		if random_text.use_string then
			text = random_text.text
		elseif random_text.use_table then
			local r = love.math.random(1, #random_text.text)
			text = random_text.text[r]
		end

		if ghost_effect.is_ghost then
			if font then
				love.graphics.setFont(font.font)
			end
			love.graphics.setColor(ghost_effect.effect_color)
			love.graphics.print(text,
				ghost_effect.ghost.x, ghost_effect.ghost.y, 0,
				ghost_effect.ghost.sx, ghost_effect.ghost.sy)
		end
	end
end

return GhostEffect
