local Concord = require("modules.concord.concord")

local DialoguesList = require("dialogues")
local Palette = require("palette")
local ScreenInfo = require("screen_info")

local Dialogues = Concord.system({
	pool_dialogue = {"id", "dialogue", "text", "position"},
})

function Dialogues:init(world)
	self.world = world
	self.font = nil
end

function Dialogues:set_dialogue_font(font)
	!if _ASSERT then
	Assert.must(font, Types.T_FONT)
	!end

	self.font = font
end

function Dialogues:show_dialogue(id, sub)
	!if _ASSERT then
	Assert.must(id, Types.T_STRING)
	Assert.must(sub, Types.T_STRING)
	!end

	local text = DialoguesList.get(id)[sub]
	local pos = vec2:new(ScreenInfo.ww/2, ScreenInfo.hh/2)

	!if _ASSERT then
	Assert.exists(text)
	Assert.exists(self.font)
	!end

	local e = Concord.entity(self.world)
		:give("dialogue")
		:give("id", "d_" .. id)
		:give("text", text, self.font)
		:give("position", pos)
		:give("color", Palette.get("ui_dialogue"))
		:give("transform", 0, 1, 1, 0.5, 0.5)
		:give("ui_text")
end

return Dialogues
