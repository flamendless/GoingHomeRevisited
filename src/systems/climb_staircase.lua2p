local Concord = require("modules.concord.concord")

local ClimbStaircase = Concord.system({
	pool = {"staircase", "collider3d", "bump3d", "position"},
	pool_col = {"id", "position", "collider3d", "bump3d"}
})

function ClimbStaircase:init(world)
	self.world = world
end

function ClimbStaircase:item_collided(e, item)
	if item.id.id == "staircase" then
		local item_pos = item.position.pos
		local pos = e.position.pos

		if item_pos.y < pos.y then
			local body = e.body
			body.dx = 0
			body.dy = 0
			body.vel_x = 0
			body.vel_y = 0

			self.world:emit("interacted_stairs", e, function(dt)
				pos.x = pos.x + 12 * dt
				pos.y = pos.y - 24 * dt

				self.world:emit("sort_z")
			end)
		end
	end
end

function ClimbStaircase:interacted_stairs()
	for _, e in ipairs(self.pool_col) do
		local id = e.id.id

		if id == "house_bottom" or id == "railing_left" then
			e.collider3d.filter = "cross"
		end
	end
end
function ClimbStaircase:climbed_staircase()
	for _, e in ipairs(self.pool_col) do
		local id = e.id.id

		if id == "house_bottom" or id == "railing_left" then
			e.collider3d.filter = "slide"
		end
	end
end

return ClimbStaircase
