local Concord = require("modules.concord.concord")

local Interactive = Concord.system({
	pool = {"id", "interactive", "collider3d"},
})

function Interactive:init(world)
	self.world = world
end

function Interactive:interactive_collided(e, interactive)
	!if _ASSERT then
	Assert.is(e, Types.T_ENTITY)
	Assert.is(interactive, Types.T_ENTITY)
	!end

	e:give("within_interactive", interactive)
end

function Interactive:interactive_left_collision(e, interactive)
	!if _ASSERT then
	Assert.is(e, Types.T_ENTITY)
	Assert.is(interactive, Types.T_ENTITY)
	!end

	local w_interactive = e.within_interactive

	if w_interactive and w_interactive.interactive.id.id == interactive.id then
		e:remove("within_interactive")
	end
end

function Interactive:check_on_leave_interactives(player)
	for _, e in ipairs(self.pool) do
		local col = e.collider3d

		if col.prev_hit and not col.is_hit then
			col.prev_hit = false
			self.world:emit("interactive_left_collision", player, e)
		end
	end
end

return Interactive
