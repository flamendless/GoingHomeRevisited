local Concord = require("modules.concord.concord")

local Item = Concord.system({
	pool = {"id", "item", "collider3d"},
})

function Item:init(world)
	self.world = world
end

function Item:item_collided(e, item)
	!if _ASSERT then
	Assert.is(e, Types.T_ENTITY)
	Assert.is(item, Types.T_ENTITY)
	!end

	e:give("within_item", item)
end

function Item:item_left_collision(e, item)
	!if _ASSERT then
	Assert.is(e, Types.T_ENTITY)
	Assert.is(item, Types.T_ENTITY)
	!end

	e:remove("within_item")
end

function Item:check_on_leave_items(player)
	for _, e in ipairs(self.pool) do
		local col = e.collider3d

		if col.prev_hit and not col.is_hit then
			col.prev_hit = false
			self.world:emit("item_left_collision", player, e)
		end
	end
end

return Item
