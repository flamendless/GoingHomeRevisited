local Concord = require("modules.concord.concord")
local Log = require("modules.log.log")

local Fade = require("fade")
local Save = require("save")
local GS

local GameStates = Concord.system()

function GameStates:init(world)
	GS = require("gamestates")
	self.world = world
	self.is_switching = false
end

function GameStates:switch_state(next_state, dur, delay)
	@@assert(type(next_state) == "string")
	@@sassert(dur, type(dur) == "number")
	@@sassert(delay, type(delay) == "number")
	if self.is_switching then return end
	if GS.current_id == next_state then return end
	Log.info("switching state to", next_state)
	self.is_switching = true
	Fade.fade_out(function()
		if GS.current_id == "Splash" then
			Save.set_flag("splash_done", true, true)
		end
		GS.switch(next_state)
		Log.info("switched state to", next_state)
		self.is_switching = false
	end, dur, delay)
end

function GameStates:save_game()
	-- local data = self.world:serialize()
	-- Utils.serial.write($_SAVESTATE_FILENAME, data)
end

function GameStates:load_game()
	-- local data = Utils.serial.read($_SAVESTATE_FILENAME)
	-- self.world:deserialize(data, true)
end

!if _DEV then
local Slab = require("modules.slab")

local states = {
	"Menu",
	"Intro",
	"Outside",
	"StorageRoom",
	"UtilityRoom",
	"Kitchen",
	"LivingRoom",
}

function GameStates:debug_update(dt)
	if not self.debug_show then return end
	self.debug_show = Slab.BeginWindow("gs", {
		Title = "GameStates",
		IsOpen = self.debug_show,
	})
	if Slab.BeginComboBox("cb_gs", {Selected = self.world.current_id}) then
		for _, v in ipairs(states) do
			if Slab.TextSelectable(v) then
				self:switch_state(v, 1.5, 0.5)
				break
			end
		end
		Slab.EndComboBox()
	end
	Slab.EndWindow()
end

function GameStates:state_keypressed(key)
	if not love.keyboard.isDown("lshift") then return end
	if key == "0" then
		Fade.set_alpha(0)
	else
		local i = tonumber(key)
		if i and i >= 1 and i <= (#states - 2) then
			self:switch_state(states[i + 2], 0)
		end
	end
end
!end

return GameStates
