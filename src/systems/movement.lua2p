local Concord = require("modules.concord.concord")

local Movement = Concord.system({
	pool = {"speed", "gravity", "body", "movement"},
})

function Movement:update(dt)
	for _, e in ipairs(self.pool) do
		if e.body.can_move then
			local speed = e.speed
			local vel_x = 0
			local vel_y = e.gravity.value * dt

			if e.body.dx ~= 0 then
				vel_x = speed.vx * e.body.dx * dt
			end

			e.body.vel_x = vel_x
			e.body.vel_y = vel_y
		end
	end
end

!if _DEV then
local Slab = require("modules.slab")
local flags = {
	gravity = true,
}

function Movement:debug_update(dt)
	if not self.debug_show then return end
	self.debug_show = Slab.BeginWindow("Movement", {
		Title = self.debug_title,
		IsOpen = self.debug_show
	})
	if Slab.CheckBox(flags.gravity, "gravity") then
		flags.gravity = not flags.gravity
		for _, e in ipairs(self.pool) do
			local gravity = e.gravity
			if not flags.gravity then
				gravity.temp = gravity.value
				gravity.value = 0
			else
				gravity.value = gravity.temp
			end
		end
	end
	Slab.EndWindow()
end

function Movement:debug_disable_gravity(bool)
	@@assert(type(bool) == "boolean")
	for _, e in ipairs(self.pool) do
		local gravity = e.gravity
		if bool then
			gravity.temp = gravity.value
			gravity.value = 0
		else
			gravity.value = gravity.temp
		end
	end
end
!end

return Movement
