local Concord = require("modules.concord.concord")

local Notification = Concord.system({
	pool = {"notification"},
})

local Assemblages = {
	UI = require("assemblages.ui"),
}

function Notification:init(world)
	self.world = world
end

function Notification:speech_bubble_update(_, e)
	@@assert(e.__isEntity)
	@@assert(e.notification)
	@@assert(e.id.value == "speech_bubble")
	local anim8 = e.animation.anim8
	local data = e.animation_data
	if e.current_frame.value == data.n_frames then
		anim8:gotoFrame(4)
	end
end

function Notification:create_speech_bubble(e)
	@@assert(e.__isEntity)
	local pos = e.pos
	Concord.entity(self.world):assemble(Assemblages.UI.speech_bubble,
		e, pos.x, pos.y)
end

function Notification:remove_speech_bubble()
	for _, e in ipairs(self.pool) do
		local n_id = e.notification.value
		if n_id == "speech_bubble" then
			e:destroy()
		end
	end
end

return Notification
