local Concord = require("modules.concord")

local Inputs = require("inputs")

local Flashlight = Concord.system({
	pool = {"id", "light_id", "point_light", "pos", "diffuse", "flashlight"},
	pool_player = {"player_controller", "body", "collider"},
})

local Light = require("assemblages.light")

function Flashlight:init(world)
	self.world = world
	self.player = nil

	self.pool.onAdded = function(pool, e)
		@@assert(self.flashlight == nil, "Flashlight was already added")
		self.flashlight = e
	end

	self.pool_player.onAdded = function(pool, e)
		@@assert(self.player == nil, "Player was already added")
		self.player = e
		self:create_flashlight()
	end
end

function Flashlight:create_flashlight()
	Concord.entity(self.world):assemble(Light.spot,
			0, 0, 7,
			{1, 0, 0, 0.85},
			164,
			{4, 4, 4})
		:give("id", "flashlight_fl")
		:give("flashlight")

	self.start_l = Concord.entity(self.world):assemble(Light.point,
			0, 0, 7,
			32,
			{2, 2, 2})
		:give("id", "flashlight_start_pl")

	self.end_l = Concord.entity(self.world):assemble(Light.point,
			0, 0, 7,
			64,
			{1.5, 1.5, 1.5})
		:give("id", "flashlight_end_pl")
end

function Flashlight:update(dt)
	if self.flashlight == nil or self.player == nil then return end
	self:update_flashlight()

	if Inputs.released("flashlight") then
		if self.flashlight.light_disabled then
			self.flashlight:remove("light_disabled")
		else
			self.flashlight:give("light_disabled")
		end
	end
end

function Flashlight:update_flashlight()
	local body = self.player.body
	local p_pos = self.player.pos
	local col = self.player.collider
	local offset = self.player.fl_spawn_offset

	local bx = p_pos.x + col.w * 0.5
	local by = p_pos.y + col.h * 0.5

	local f_pos = self.flashlight.pos
	local ldir = self.flashlight.light_dir
	local fd = ldir.value

	fd[1] = ldir.orig_value[1] * body.dir
	f_pos.x = bx + offset.x * fd[1]
	f_pos.y = by + offset.y

	local strength = self.flashlight.point_light.value
	local s_pos = self.start_l.pos
	s_pos.x = f_pos.x
	s_pos.y = f_pos.y

	local e_pos = self.end_l.pos
	e_pos.x = f_pos.x + strength * fd[1] * fd[4]
	e_pos.y = f_pos.y

	self.world:emit("update_light_dir", self.flashlight)
	self.world:emit("update_light_pos", self.flashlight)
	self.world:emit("update_light_pos", self.start_l)
	self.world:emit("update_light_pos", self.end_l)
end

function Flashlight:draw_fl()
	local p_pos = self.player.pos
	local col = self.player.collider
	local offset = self.player.fl_spawn_offset

	local bx = p_pos.x + col.w * 0.5
	local by = p_pos.y + col.h * 0.5

	local ldir = self.flashlight.light_dir
	local fd = ldir.value

	local fx = bx + offset.x * fd[1]
	local fy = by + offset.y

	love.graphics.setColor(1, 0, 0, 1)
	love.graphics.circle("fill", fx, fy, 2)
end

return Flashlight
