local Concord = require("modules.concord.concord")

local RenderText = Concord.system({
	pool = {"position", "text"},
	pool_ui = {"position", "text", "ui_text"},
})

function RenderText:init()
end

function RenderText:internal_draw(e)
	local hidden = e:get("hidden")
	if not hidden then
		local pos = e:get("position")
		local color = e:get("color")
		local text = e:get("text")
		local font = e:get("font")
		local transform = e:get("transform")
		local sdf = e:get("sdf")
		love.graphics.setColor(1, 1, 1, 1)

		if color then
			love.graphics.setColor(e.color.color)
		end

		if font then
			love.graphics.setFont(font.font)
		end

		local font = love.graphics.getFont()
		local rotation, sx, sy, ox, oy
		if transform then
			rotation = transform.rotation
			sx = transform.sx
			sy = transform.sy
			ox = transform.ox
			oy = transform.oy
			if transform.ox == 0.5 then
				ox = font:getWidth(text.text)/2
			end
			if transform.oy == 0.5 then
				oy = font:getHeight(text.text)/2
			elseif transform.oy == 1 then
				oy = font:getHeight(text.text)
			end
		end
		if sdf then
			sx = sdf.scale_x
			sy = sdf.scale_y
		end
		local x = pos.pos.x
		local y = pos.pos.y

		love.graphics.print(text.text, x, y, rotation, sx, sy, ox, oy)
	end
end

function RenderText:draw()
	for _, e in ipairs(self.pool) do
		if not e:has("ui_text") then
			self:internal_draw(e)
		end
	end
end

function RenderText:draw_ui()
	for _, e in ipairs(self.pool_ui) do
		self:internal_draw(e)
	end
end

return RenderText
