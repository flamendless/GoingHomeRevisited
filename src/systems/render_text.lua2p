local Concord = require("modules.concord.concord")
local ReflowPrint = require("modules.reflowprint.reflowprint")

local RenderText = Concord.system({
	pool = {"pos", "text", "!nf_render_text", "!shader", "!use_canvas"},
	pool_static = {"pos", "static_text", "font", "!shader", "!use_canvas"},
})

function RenderText:init(world)
	self.world = world

	self.pool.onAdded = function(pool, e)
		if e.sdf then
			if not e.font_sdf then
				error("sdf must have font_sdf")
			end
			if e.font then
				error("sdf must not have font")
			end
		end
	end

	self.pool_static.onAdded = function(pool, e)
		!if _DEV then
		if e.sdf then
			error("static_font can't use sdf font")
		end
		!end
		e.static_text.obj = love.graphics.newText(e.font.value, e.static_text.value)
	end
end

function RenderText:draw_text_ex(e)
	if e.hidden then return end
	local text = e.text
	if text and #text.value == 0 then return end
	local color = e.color
	local textf = e.textf
	local static_text = e.static_text
	local font = e.font
	local font_sdf = e.font_sdf
	local transform = e.transform
	local sdf = e.sdf
	local rfp = e.reflowprint

	love.graphics.setColor(1, 1, 1, 1)

	if color then
		love.graphics.setColor(color.value)
	end

	if font then
		love.graphics.setFont(font.value)
	elseif font_sdf then
		love.graphics.setFont(font_sdf.value)
	end

	local str = text and text.value
	local current_font = love.graphics.getFont()
	local r, sx, sy, ox, oy, kx, ky

	if transform then
		r = transform.rotation
		sx = transform.sx
		sy = transform.sy
		ox = transform.ox
		oy = transform.oy
		kx = transform.kx
		ky = transform.ky

		if transform.ox == 0.5 then
			if static_text then
				ox = static_text.obj:getWidth() * 0.5
			elseif textf then
				ox = textf.limit * 0.5
			else
				ox = current_font:getWidth(str) * 0.5
			end
		end

		if transform.oy == 0.5 then
			if static_text then
				oy = static_text.obj:getHeight() * 0.5
			elseif textf then
				local lines = current_font:getWidth(str)/textf.limit
				lines = math.ceil(lines)
				oy = current_font:getHeight(str) * 0.5 * lines
			else
				oy = current_font:getHeight(str) * 0.5
			end
		elseif transform.oy == 1 then
			if static_text then
				oy = static_text.obj:getHeight()
			else
				oy = current_font:getHeight(str)
			end
		end
	end

	if sdf then
		sx = sdf.sx
		sy = sdf.sy
	end

	local x = e.pos.x
	local y = e.pos.y

	if rfp then
		x = x - ox
		y = y - oy
		ReflowPrint(rfp.dt/rfp.current, str, x, y, rfp.width, rfp.alignment, sx, sy)
	elseif static_text then
		love.graphics.draw(static_text.obj, x, y, r, sx, sy, ox, oy, kx, ky)
	elseif textf then
		love.graphics.printf(str, x, y, textf.limit, textf.align, r, sx, sy, ox, oy)
	else
		love.graphics.print(str, x, y, r, sx, sy, ox, oy, kx, ky)
	end
end

function RenderText:draw()
	for _, e in ipairs(self.pool) do
		if not e.ui_element then
			self:draw_text_ex(e)
		end
	end

	for _, e in ipairs(self.pool_static) do
		if not e.ui_element and not e.nf_render_text then
			self:draw_text_ex(e)
		end
	end
end

return RenderText
