local Concord = require("modules.concord.concord")

local Fade = require("fade")
local Save = require("save")

local OutsideHouse = Concord.system({
	pool_door = {"door", "collider3d", "bump3d", "position"},
	pool_col = {"id", "position", "collider3d", "bump3d"},
	pool_railings = {"railings"}
})

function OutsideHouse:init(world)
	self.world = world
	self.can_go_to_storage_room = false
end

function OutsideHouse:item_collided(e, item)
	local item_id = item.id.id

	if item_id == "item_locked_door" then
		e:remove("override_animation")
		:remove("animation_on_update")
		:remove("climb_up")
		:give("change_animation_tag", "idle")

		self.world:emit("climbed_staircase", "up")
	end
end

function OutsideHouse:interacted_stairs()
	for _, e in ipairs(self.pool_railings) do
		e:give("hidden")
	end
end

function OutsideHouse:climbed_staircase(dir)
	for _, e in ipairs(self.pool_railings) do
		if dir == "up" then
			e:remove("hidden")
		elseif dir == "down" then
			e:give("hidden")
		end
	end
end

function OutsideHouse:action_interacted_eye(target_item)
	!if _ASSERT then
	Assert.is(target_item, Types.T_ENTITY)
	!end

	local id = target_item.id.id
	local str_outside = "outside"

	if id == "item_car" then
		self.world:emit("show_dialogue", str_outside, "car_eye")
	elseif id == "item_wood" then
		self.world:emit("show_dialogue", str_outside, "wood_eye")
	elseif id == "item_locked_door" then
		self.world:emit("show_dialogue", str_outside, "locked_door_eye")
	elseif id == "item_backdoor" then
		self.world:emit("show_dialogue", str_outside, "backdoor_eye")
	end
end

function OutsideHouse:action_interacted_hand(target_item, player)
	!if _ASSERT then
	Assert.is(target_item, Types.T_ENTITY)
	!end

	local id = target_item.id.id
	local str_outside = "outside"

	if id == "item_car" then
		self.world:emit("show_dialogue", str_outside, "car_hand")
	elseif id == "item_wood" then
		self.world:emit("show_dialogue", str_outside, "wood_hand")
	elseif id == "item_locked_door" then
		self.world:emit("face_left", player)
		self.world:emit("player_open_locked_door", player, function()
			self.world:emit("show_dialogue", str_outside, "locked_door_hand", id)
			self.can_go_to_storage_room = true
		end)
	elseif id == "item_backdoor" then
		if self.can_go_to_storage_room then
			local save_bd = "backdoor_locked"

			if Save.data[save_bd] then
				-- do puzzle here to unlock the door
				-- after:
				-- Save.toggle_flag(save_bd, true)
			else
				self.world:emit("player_open_door", player, function()
					Fade.fade_out(function()
						self.world:emit("go_to_next", id)
					end, 0.5)
				end)
			end
		else
			self.world:emit("show_dialogue", str_outside, "backdoor_hand", id)
		end
	end
end

function OutsideHouse:action_interacted_bag(target_item)
	!if _ASSERT then
	Assert.is(target_item, Types.T_ENTITY)
	!end

	local id = target_item.id.id
end

function OutsideHouse:destroyed_dialogue(item_id)
	if item_id and item_id == "item_locked_door" then
		self.world:emit("reset_player")
	end
end

return OutsideHouse
