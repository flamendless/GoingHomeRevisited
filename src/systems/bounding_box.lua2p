local Concord = require("modules.concord.concord")

local Helper = require("helper")

local BoundingBox = Concord.system({
	pool = {"bounding_box", "pos"},
})

function BoundingBox:init(world)
	self.world = world
end

function BoundingBox:update(dt)
	for _, e in ipairs(self.pool) do
		local box = e.bounding_box
		local x, y = Helper.get_real_pos_box(e)
		box.x = x
		box.y = y
	end
end

function BoundingBox:on_camera_move(camera)
	for _, e in ipairs(self.pool) do
		local ui = e.ui_element
		local box = e.bounding_box
		local pos = e.pos
		local bx, by

		if ui then
			local transform = e.transform

			bx = pos.x
			by = pos.y

			if transform then
				local ox, oy = Helper.get_offset(e)

				bx = bx - ox * transform.orig_sx
				by = by - oy * transform.orig_sy
			end
		else
			bx, by = camera:toScreen(pos.x, pos.y)
		end

		box.screen_pos.x = bx
		box.screen_pos.y = by
	end
end

return BoundingBox
