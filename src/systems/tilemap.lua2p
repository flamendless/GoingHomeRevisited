local Cartographer = require("modules.cartographer.cartographer")
local Concord = require("modules.concord.concord")

local Tilemap = Concord.system({
	pool = {"id", "tilemap"}
})

function Tilemap:init(world)
	self.world = world
	self.maps = {}

	self.pool.onAdded = function(pool, e)
		local id = e.id.id
		local tilemap = e.tilemap
		local map = Cartographer.load(tilemap.path)
		local tile_size = {map.tilewidth, map.tileheight}
		local map_size = {map.width, map.height}

		tilemap.map = map
		self.maps[id] = map

		e:give("tilemap_data", tile_size, map_size)
	end
end

function Tilemap:setup_colliders(e)
	local map = e.tilemap.map
end

function Tilemap:draw_map()
	for _, e in ipairs(self.pool) do
		local map = e.tilemap.map

		map:draw()

		!if not _RELEASE then
		local data = e.tilemap_data.map_size_px

		love.graphics.setColor(1, 0, 0, 1)
		love.graphics.rectangle("line", 0, 0, data[1], data[2])
		!end
	end
end

return Tilemap
