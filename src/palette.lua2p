local Lume = require("modules.lume.lume")

local randomf = Lume.random

local Palette = {}

!(@insert "scripts/color.lua")
-- TODO finalize colors

Palette.colors = {
	white = {1, 1, 1},
	red = {1, 0, 0},
	camera_clip = {0, 0, 0},
	red_desaturated = !(rgb_to_love("#73160f")),

	menu_text = !(rgb_to_love("#ffffff")),
	menu_select = !(rgb_to_love("#73160f")),
	menu_disabled = !(rgb_to_love("#4C4C4C")),

	about_normal = !(rgb_to_love("#ffffff")),
	about_hint = !(rgb_to_love("#ff1744")),

	ui_skip = !(rgb_to_love("#ff1744")),
	ui_key = {0.121568627, 0.078431373, 0.207843137},
	ui_hold_progress = {0.988235294, 0.988235294, 0.925490196},
	ui_feedback = {0.380392, 0.878431, 0.635294},
	ui_not_hovered = !(rgb_to_love("#ccc9da")),
	ui_hovered = !(rgb_to_love("#ffffff")),
	ui_dialogue = !(rgb_to_love("#ffffff")),
	hovered_choice = {1, 0, 0},

	outline = {0.5, 0.5, 0.5},

	inventory_fill_unhovered = {0.098, 0.109, 0.17},
	inventory_fill_hovered = {0.098/10, 0.109/10, 0.17/10},
	inventory_line_unhovered = {1, 1, 1},
	inventory_line_hovered = {1, 1, 1},
}

Palette.diffuse = {
	firefly = {6, 3, 0},
	car_headlight_pl = {6, 6, 3},
	car_headlight_sl = {4.98, 3.96, 1.59},
	backdoor_pl = {4.98, 3.96, 1.59},
	backdoor_sl = {6, 6, 3},
	frontdoor_pl = {4.98, 3.96, 1.59},
	frontdoor_sl = {6, 6, 3},

	storage_room_bulb_light = {4.98, 3.96, 1.59},
	utility_room_bulb_light = {4.98, 3.96, 1.59},
}

Palette.color_glitches = {
	{randomf(0.1, 0.9), randomf(0.1, 0.9), randomf(0.1, 0.9), randomf(0.3, 0.7)},
	{randomf(0.1, 0.9), randomf(0.1, 0.9), randomf(0.1, 0.9), randomf(0.3, 0.7)},
	{randomf(0.1, 0.9), randomf(0.1, 0.9), randomf(0.1, 0.9), randomf(0.3, 0.7)},
	{randomf(0.1, 0.9), randomf(0.1, 0.9), randomf(0.1, 0.9), randomf(0.3, 0.7)},
}

function Palette.get(color, alpha)
	@@assert(type(color) == "string")
	@@assert(Palette.colors[color])
	@@sassert(alpha, type(alpha) == "number")

	local c = Palette.colors[color]
	local a = alpha or c[4] or 1

	return {c[1], c[2], c[3], a}
end

function Palette.get_diffuse(color)
	@@assert(type(color) == "string")
	@@assert(Palette.diffuse[color])
	return Palette.diffuse[color]
end

return Palette
