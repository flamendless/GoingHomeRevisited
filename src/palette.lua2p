local Lume = require("modules.lume.lume")
local randomf = Lume.random

local Palette = {}

Palette.colors = {
	white = { 1, 1, 1, 1 },
	red = { 1, 0, 0, 1 },
	disabled = { 0.2, 0.2, 0.2, 1 },
}

Palette.windows = {
	settings = { 0.2, 0.2, 0.2, 0.8 }
}

Palette.color_glitches = {
	{randomf(0.1, 0.9), randomf(0.1, 0.9), randomf(0.1, 0.9), randomf(0.3, 0.7)},
	{randomf(0.1, 0.9), randomf(0.1, 0.9), randomf(0.1, 0.9), randomf(0.3, 0.7)},
	{randomf(0.1, 0.9), randomf(0.1, 0.9), randomf(0.1, 0.9), randomf(0.3, 0.7)},
	{randomf(0.1, 0.9), randomf(0.1, 0.9), randomf(0.1, 0.9), randomf(0.3, 0.7)},
}

function Palette:get_color(color, alpha)
	!if _ASSERT then
	assert(self.colors[color], "Passed 'color' does not exist in 'Palette.colors' list")
	if alpha then
		assert(type(alpha) == "number", "Passed argument must be of type 'number'")
	end
	!end
	local color = self.colors[color]
	return {
		color[1],
		color[2],
		color[3],
		alpha or color[4]
	}
end

return Palette
