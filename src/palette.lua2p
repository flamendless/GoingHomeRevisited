local random = love.math.random

local Palette = {}

-- TODO finalize colors

Palette.colors = {
	white = {1, 1, 1},
	red = {1, 0, 0},
	camera_clip = {0, 0, 0},
	red_desaturated = @@hex_to_rgb(0x73160f),

	menu_text = @@hex_to_rgb(0xffffff),
	menu_select = @@hex_to_rgb(0x73160f),
	menu_disabled = @@hex_to_rgb(0x4C4C4C),

	about_normal = @@hex_to_rgb(0xffffff),
	about_hint = @@hex_to_rgb(0xff1744),

	ui_show_key_text = {1, 1, 1},
	ui_key = {0.121568627, 0.078431373, 0.207843137},
	ui_hold_progress = {0.988235294, 0.988235294, 0.925490196},
	ui_feedback = {0.380392, 0.878431, 0.635294},
	ui_not_hovered = @@hex_to_rgb(0xccc9da),
	ui_hovered = @@hex_to_rgb(0xffffff),
	ui_dialogue = @@hex_to_rgb(0xffffff),
	hovered_choice = {1, 0, 0},

	outline = {1, 1, 1},

	inventory_cell = {0.623529411765, 0.63137254902, 0.556862745098, 0},
	note_list = {0, 0, 0},
	note_on_hovered = {1, 0, 0},
}

Palette.diffuse = {
	--intro
	car = {1, 1, 1},
	post = {1, 1, 1},

	--outside
	ambiance_outside = {0.7, 0.7, 0.7, 0.3},
	firefly = {3, 2.5, 0},
	car_headlight_pl = {5, 4.5, 2.3},
	car_headlight_sl = {3, 3, 1},
	door_pl = {1.62, 1.46, 1.06},
	door_sl = {4, 4, 1},

	ambiance_storage_room = {0.7, 0.7, 0.7, 0.3},
	storage_room_bulb_light = {1.44, 1.64, 0.2},

	ambiance_utility_room = {0.7, 0.7, 0.7, 0.3},
	utility_room_bulb_light = {1.44, 1.64, 0.2},

	ambiance_kitchen = {0.7, 0.7, 0.7, 0.3},
	kitchen_side = {1.44, 1.64, 0.2},
	kitchen_mid_pl = {1, 1.12, 0.1},
}

Palette.color_glitches = {
	{random(0.1, 0.9), random(0.1, 0.9), random(0.1, 0.9), random(0.3, 0.7)},
	{random(0.1, 0.9), random(0.1, 0.9), random(0.1, 0.9), random(0.3, 0.7)},
	{random(0.1, 0.9), random(0.1, 0.9), random(0.1, 0.9), random(0.3, 0.7)},
	{random(0.1, 0.9), random(0.1, 0.9), random(0.1, 0.9), random(0.3, 0.7)},
}

function Palette.get(color, alpha)
	@@assert(type(color) == "string")
	@@assert(Palette.colors[color])
	@@sassert(alpha, type(alpha) == "number")

	local c = Palette.colors[color]
	local a = alpha or c[4] or 1

	return {c[1], c[2], c[3], a}
end

function Palette.get_diffuse(color)
	@@assert(type(color) == "string")
	@@assert(Palette.diffuse[color])
	return {unpack(Palette.diffuse[color])}
end

return Palette
