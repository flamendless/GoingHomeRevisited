--[[
Project: Going Home Revisit
Author: Brandon Blanker Lim-it @flamendless
Start Date: Mon Jan  7 15:28:53 PST 2019
Start Date (major refactor): Tue Mar 17 18:42:00 PST 2020
--]]

io.stdout:setvbuf("no")
require("modules.batteries"):export()

!if _ASSERT then
Assert = require("assert")
!end
!if not _RELEASE then
Dev = require("dev")
Inspect = require("modules.inspect.inspect")
!end

local ErrorHandler = require("error_handler")
love.errhand = ErrorHandler.callback
local GameStates = require("gamestates")
local Info = require("info")
local Network = require("network")
local Preloader = require("preloader")
local Settings = require("settings")
local WindowMode = require("window_mode")

local format = string.format

local Concord = require("modules.concord.concord")
local Flux = require("modules.flux.flux")
local Lily = require("modules.lily.lily")
local Log = require("modules.log.log")
Log.outfile = !(_LOG_OUTPUT)
Log.lovesave = true
local Semver = require("modules.semver.semver")
local Timer = require("modules.hump.timer")
local TLE = require("modules.tle.timeline")

local this_version = ("%i.%i.%i"):format(unpack(!(_GAME_VERSION)))
local this_semver = Semver(this_version)

function love.load()
	Log.info(format("Starting... Game Version: %s", this_version))
	!if _NETWORK then
	Log.info("Network is enabled")
	Network.check_latest_version(this_semver)
	!end

	love.math.setRandomSeed(love.timer.getTime())
	love.graphics.setDefaultFilter(!(_DEFAULT_FILTER), !(_DEFAULT_FILTER))

	Info.initialize()
	WindowMode.initialize()
	Settings.initialize()
	TLE.Attach()
	GameStates:canvas_resize()

	!if _RELEASE then
	GameStates:switch("Splash")
	!else
	GameStates:switch("Intro")
	!end
end

function love.update(dt)
	Timer.update(dt)
	Flux.update(dt)
	GameStates:update(dt)
end

function love.draw()
	love.graphics.setColor(1, 1, 1, 1)
	GameStates:draw()

	if not GameStates:is_ready() then
		Preloader.draw_loading()
	end

	!if not _RELEASE then
	love.graphics.setColor(1, 0, 0, 1)
	love.graphics.print(love.timer.getFPS(), 8, 8)
	!end
end

function love.keypressed(key)
	if key == "f" then
		GameStates:resize()
	end

	!if not _RELEASE then
	if key == "t" then
		GameStates:switch("Test")
	elseif key == "r" then
		love.event.quit("restart")
	end
	if key == "b" and GameStates:getID() == "Test" then
		GameStates:switch_to_previous("Test")
	end
	!end

	GameStates:keypressed(key)
end

function love.keyreleased(key)
	GameStates:keyreleased(key)
end

function love.mousepressed(mx, my, mb)
	GameStates:mousepressed(mx, my, mb)
end

function love.mousereleased(mx, my, mb)
	GameStates:mousereleased(mx, my, mb)
end

function love.quit()
	Lily.quit()
	Log.info("Quitting...")
end
