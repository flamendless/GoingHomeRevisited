--[[
Project: Going Home: Revisited
Author: Brandon Blanker Lim-it @flamendless
Start Date: Tue Mar 17 18:42:00 PST 2020
--]]

require("modules.batteries"):export()

!if _PROF then
PROF_CAPTURE = true
JPROF = require("modules.jprof.jprof")
!end

local Flux = require("modules.flux.flux")
local Lily = require("modules.lily.lily")
local Log = require("modules.log.log")
Log.lovesave = true
require("modules.sdf").mount()
local Timer = require("modules.hump.timer")
local TLE = require("modules.tle.timeline")

local Audio = require("audio")
local Config = require("config")
local ErrorHandler = require("error_handler")
love.errhand = ErrorHandler.callback
local GameStates = require("gamestates")
local Info = require("info")
local Inputs = require("inputs")
local Preloader = require("preloader")
local Save = require("save")
local Settings = require("settings")
local EventManager = require("event_manager")
local WindowMode = require("window_mode")

!if _DEV then
require("strict")
local DevTools = require("devtools")
!end

local format = string.format
local font_preload = love.graphics.newFont("res/fonts/Jamboree.ttf", 32)
font_preload:setFilter(!(_FONT_FILTER), !(_FONT_FILTER))
local function custom_loading_screen()
	local w, h = love.graphics.getDimensions()

	love.graphics.setColor(0, 0, 0, 0.5)
	love.graphics.rectangle("fill", 0, 0, w, h)

	local str_loading = format("LOADING: %i%%", Preloader.percent)
	local ox = font_preload:getWidth(str_loading)/2
	local oy = font_preload:getHeight(str_loading)/2

	love.graphics.setColor(1, 1, 1, 1)
	love.graphics.setFont(font_preload)
	love.graphics.print(str_loading, w/2, h * 0.75, 0, 1, 1, ox, oy)
end

function love.load()
	!if _PROF then
	JPROF.push("frame")
	JPROF.push("love load")
	!end

	Log.info(string.format("Starting... Game Version : %s", Config.this_version))
	Log.info(!("Commit: " .. _COMMIT_VERSION))

	love.math.setRandomSeed(love.timer.getTime())
	love.graphics.setDefaultFilter(!(_DEFAULT_FILTER), !(_DEFAULT_FILTER))
	WindowMode.init()
	Info.init()
	Save.init()
	Settings.init()
	Audio.init()
	Inputs.init()
	TLE.Attach()

	!if _DEV then
	-- GameStates.switch("Splash")
	-- GameStates.switch("Menu")
	-- GameStates.switch("Intro")
	GameStates.switch("Outside")
	DevTools.init()
	!else
	GameStates.switch("Splash")
	!end

	!if _PROF then
	JPROF.pop("love load")
	JPROF.pop("frame")
	!end
end

function love.update(dt)
	!if _PROF then
	JPROF.push("frame")
	!end

	Timer.update(dt)
	Flux.update(dt)
	EventManager.update(dt)
	GameStates.update(dt)
	Inputs.update()

	!if _DEV then
	DevTools.update(dt)
	!end

	!if _PROF then
	JPROF.pop("frame")
	!end
end

function love.draw()
	!if _PROF then
	JPROF.push("frame")
	!end

	love.graphics.setColor(1, 1, 1, 1)
	GameStates.draw()

	if not GameStates.is_ready() then
		custom_loading_screen()
	end

	!if _DEV then
	DevTools.draw()
	love.graphics.setColor(1, 0, 0)
	love.graphics.setFont(font_preload)
	love.graphics.print(love.timer.getFPS())
	love.graphics.print(!(_MODE), love.graphics.getWidth() - font_preload:getWidth(!(_MODE)))
	DevTools.end_draw()
	!end

	!if _PROF then
	JPROF.pop("frame")
	!end
end

function love.keypressed(key)
	!if _DEV then
	DevTools.keypressed(key)
	!end
	Inputs.keypressed(key)
	GameStates.keypressed(key)
end

function love.keyreleased(key)
	Inputs.keyreleased(key)
	GameStates.keyreleased(key)
end

function love.mousemoved(mx, my, dx, dy)
	!if _DEV then
	DevTools.mousemoved(mx, my, dx, dy)
	!end
	GameStates.mousemoved(mx, my, dx, dy)
end

function love.mousepressed(mx, my, mb)
	!if _DEV then
	DevTools.mousepressed(mx, my, mb)
	!end
	GameStates.mousepressed(mx, my, mb)
end

function love.mousereleased(mx, my, mb)
	!if _DEV then
	DevTools.mousereleased(mx, my, mb)
	!end
	GameStates.mousereleased(mx, my, mb)
end

function love.quit()
	Lily.quit()
	Log.info("Quitting...")

	!if not _RELEASE and _LOG_SAVE then
	Log.quit(!(_LOG_OUTPUT))
	!end

	!if _PROF then
	JPROF.write("prof.mpack")
	!end
end
