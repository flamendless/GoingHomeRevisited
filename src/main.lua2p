--[[
Project: Going Home: Revisited
Author: Brandon Blanker Lim-it @flamendless
Start Date: Tue Mar 17 18:42:00 PST 2020
--]]

!if not _RELEASE then
io.stdout:setvbuf("no")
local getStats = love.graphics.getStats
!if _ASSERT then
Assert = require("assert")
Types = Assert.types
!end
!end

require("modules.batteries"):export()

!if not _RELEASE then
require("modules.strict")
!end

local Flux = require("modules.flux.flux")
local Lily = require("modules.lily.lily")
local Log = require("modules.log.log")
Log.lovesave = true
local Semver = require("modules.semver.semver")
local SDF = require("modules.sdf").mount()
local Timer = require("modules.hump.timer")
local TLE = require("modules.tle.timeline")

local ErrorHandler = require("error_handler")
love.errhand = ErrorHandler.callback
local DebugFlags = require("debug_flags")
local GameStates = require("gamestates")
local Info = require("info")
local Inputs = require("inputs")
local Network = require("network")
local Preloader = require("preloader")
local Save = require("save")
local Settings = require("settings")
local EventManager = require("event_manager")
local WindowMode = require("window_mode")

local format = string.format

local this_version = !(("%i.%i.%i"):format(unpack((_GAME_VERSION))))
local this_semver = Semver(this_version)

local font_preload = love.graphics.newFont("res/fonts/Jamboree.ttf", 32)
font_preload:setFilter(!(_FONT_FILTER), !(_FONT_FILTER))

local function custom_loading_screen()
	local w, h = love.graphics.getDimensions()

	love.graphics.setColor(0, 0, 0, 0.5)
	love.graphics.rectangle("fill", 0, 0, w, h)

	local str_loading = format("LOADING: %i%%", Preloader.percent)
	local ox = font_preload:getWidth(str_loading)/2
	local oy = font_preload:getHeight(str_loading)/2

	love.graphics.setColor(1, 1, 1, 1)
	love.graphics.setFont(font_preload)
	love.graphics.print(str_loading, w/2, h * 0.75, 0, 1, 1, ox, oy)
end

function love.load()
	Log.info(format("Starting... Game Version: %s", this_version))
	!if _NETWORK then
	Log.info("Network is enabled")
	Network.check_latest_version(this_semver)
	!end

	love.math.setRandomSeed(love.timer.getTime())
	love.graphics.setDefaultFilter(!(_DEFAULT_FILTER), !(_DEFAULT_FILTER))

	Info.initialize()
	WindowMode.initialize()
	Save.initialize()
	Settings.initialize()
	Inputs.initialize()
	TLE.Attach()
	GameStates.canvas_resize()

	!if _RELEASE then
	GameStates.switch("Splash")
	!else
	-- GameStates.switch("Outside")
	GameStates.switch("StorageRoom")
	!end
end

function love.update(dt)
	Timer.update(dt)
	Flux.update(dt)
	EventManager.update(dt)
	GameStates.update(dt)
end

function love.draw()
	love.graphics.setColor(1, 1, 1, 1)
	GameStates.draw()

	if not GameStates.is_ready() then
		custom_loading_screen()
	end

	!if not _RELEASE then
	DebugFlags.t_stats = getStats()
	!end
end

function love.keypressed(key)
	!if not _RELEASE then
	if key == "t" then
		if GameStates.getID() == "Test" then
			GameStates.switch_to_previous()
		else
			GameStates.switch("Test")
		end
	elseif key == "r" then
		love.event.quit("restart")
	end
	!end

	GameStates.keypressed(key)
end

function love.keyreleased(key)
	GameStates.keyreleased(key)
end

function love.mousemoved(mx, my)
	GameStates.mousemoved(mx, my)
end

function love.mousepressed(mx, my, mb)
	GameStates.mousepressed(mx, my, mb)
end

function love.mousereleased(mx, my, mb)
	GameStates.mousereleased(mx, my, mb)
end

function love.quit()
	Lily.quit()
	Log.info("Quitting...")

	!if not _RELEASE and _LOG_SAVE then
	Log.quit(!(_LOG_OUTPUT))
	!end
end
